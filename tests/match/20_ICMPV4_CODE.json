[
    {
        "FLOW_MOD": [
            {
                "OFPFlowMod": {
                    "command": 0, 
                    "instructions": [
                        {
                            "OFPInstructionActions": {
                                "actions": [
                                    {
                                        "OFPActionOutput": {
                                            "max_len": 0, 
                                            "port": 2
                                        }
                                    }
                                ], 
                                "type": 4
                            }
                        }
                    ], 
                    "match": {
                        "OFPMatch": {
                            "oxm_fields": [
                                {
                                    "OXMTlv": {
                                        "field": "eth_type", 
                                        "value": 2048
                                    }
                                }, 
                                {
                                    "OXMTlv": {
                                        "field": "ip_proto", 
                                        "value": 1
                                    }
                                }, 
                                {
                                    "OXMTlv": {
                                        "field": "icmpv4_code", 
                                        "value": 0
                                    }
                                }
                            ], 
                            "type": 1
                        }
                    }, 
                    "priority": 1
                }
            }
        ], 
        "description": "テスト0: match:icmpv4_code=0のフローにマッチするパケットを印加", 
        "packets": [
            {
                "egress": [
                    "ethernet(dst='aa:aa:aa:aa:aa:aa',ethertype=2048,src='bb:bb:bb:bb:bb:bb')", 
                    "ipv4(csum=46933,dst='192.168.1.2',flags=2,header_length=5,identification=0,offset=0,option=None,proto=1,src='192.168.1.1',tos=0,total_length=84,ttl=64,version=4)", 
                    "icmp(code=0,csum=3371,data=echo(data='\\xd3]\\xb7\\xe3\\x9e\\xbb\\xf3\\xd6\\x9bq\\xd7\\x9f\\x82\\x18\\xa3\\x92Y\\xa7\\xa2\\x9a\\xab\\xb2\\xdb\\xaf\\xc3\\x1c\\xb3\\x00\\x10\\x83\\x10Q\\x87 \\x92\\x8b',id_=1,seq=1),type_=8)"
                ], 
                "ingress": [
                    "ethernet(dst='aa:aa:aa:aa:aa:aa',ethertype=2048,src='bb:bb:bb:bb:bb:bb')", 
                    "ipv4(csum=46933,dst='192.168.1.2',flags=2,header_length=5,identification=0,offset=0,option=None,proto=1,src='192.168.1.1',tos=0,total_length=84,ttl=64,version=4)", 
                    "icmp(code=0,csum=3371,data=echo(data='\\xd3]\\xb7\\xe3\\x9e\\xbb\\xf3\\xd6\\x9bq\\xd7\\x9f\\x82\\x18\\xa3\\x92Y\\xa7\\xa2\\x9a\\xab\\xb2\\xdb\\xaf\\xc3\\x1c\\xb3\\x00\\x10\\x83\\x10Q\\x87 \\x92\\x8b',id_=1,seq=1),type_=8)"
                ]
            }, 
            {
                "egress": [
                    "ethernet(dst='aa:aa:aa:aa:aa:aa',ethertype=2048,src='bb:bb:bb:bb:bb:bb')", 
                    "ipv4(csum=46933,dst='192.168.1.2',flags=2,header_length=5,identification=0,offset=0,option=None,proto=1,src='192.168.1.1',tos=0,total_length=84,ttl=64,version=4)", 
                    "icmp(code=0,csum=4651,data=dest_unreach(data='\\xd3]\\xb7\\xe3\\x9e\\xbb\\xf3\\xd6\\x9bq\\xd7\\x9f\\x82\\x18\\xa3\\x92Y\\xa7\\xa2\\x9a\\xab\\xb2\\xdb\\xaf\\xc3\\x1c\\xb3\\x00\\x10\\x83\\x10Q\\x87 \\x92\\x8b',data_len=1,mtu=1),type_=3)"
                ], 
                "ingress": [
                    "ethernet(dst='aa:aa:aa:aa:aa:aa',ethertype=2048,src='bb:bb:bb:bb:bb:bb')", 
                    "ipv4(csum=46933,dst='192.168.1.2',flags=2,header_length=5,identification=0,offset=0,option=None,proto=1,src='192.168.1.1',tos=0,total_length=84,ttl=64,version=4)", 
                    "icmp(code=0,csum=4651,data=dest_unreach(data='\\xd3]\\xb7\\xe3\\x9e\\xbb\\xf3\\xd6\\x9bq\\xd7\\x9f\\x82\\x18\\xa3\\x92Y\\xa7\\xa2\\x9a\\xab\\xb2\\xdb\\xaf\\xc3\\x1c\\xb3\\x00\\x10\\x83\\x10Q\\x87 \\x92\\x8b',data_len=1,mtu=1),type_=3)"
                ]
            }
        ]
    }, 
    {
        "FLOW_MOD": [
            {
                "OFPFlowMod": {
                    "command": 0, 
                    "instructions": [
                        {
                            "OFPInstructionActions": {
                                "actions": [
                                    {
                                        "OFPActionOutput": {
                                            "max_len": 0, 
                                            "port": 2
                                        }
                                    }
                                ], 
                                "type": 4
                            }
                        }
                    ], 
                    "match": {
                        "OFPMatch": {
                            "oxm_fields": [
                                {
                                    "OXMTlv": {
                                        "field": "eth_type", 
                                        "value": 2048
                                    }
                                }, 
                                {
                                    "OXMTlv": {
                                        "field": "ip_proto", 
                                        "value": 1
                                    }
                                }, 
                                {
                                    "OXMTlv": {
                                        "field": "icmpv4_code", 
                                        "value": 0
                                    }
                                }
                            ], 
                            "type": 1
                        }
                    }, 
                    "priority": 1
                }
            }
        ], 
        "description": "テスト1: match:icmpv4_code=0のフローにマッチしないパケットを印加", 
        "packets": [
            {
                "ingress": [
                    "ethernet(dst='aa:aa:aa:aa:aa:aa',ethertype=2048,src='bb:bb:bb:bb:bb:bb')", 
                    "ipv4(csum=46933,dst='192.168.1.2',flags=2,header_length=5,identification=0,offset=0,option=None,proto=1,src='192.168.1.1',tos=0,total_length=84,ttl=64,version=4)", 
                    "icmp(code=1,csum=3370,data=echo(data='\\xd3]\\xb7\\xe3\\x9e\\xbb\\xf3\\xd6\\x9bq\\xd7\\x9f\\x82\\x18\\xa3\\x92Y\\xa7\\xa2\\x9a\\xab\\xb2\\xdb\\xaf\\xc3\\x1c\\xb3\\x00\\x10\\x83\\x10Q\\x87 \\x92\\x8b',id_=1,seq=1),type_=8)"
                ]
            }, 
            {
                "ingress": [
                    "ethernet(dst='aa:aa:aa:aa:aa:aa',ethertype=2048,src='bb:bb:bb:bb:bb:bb')", 
                    "ipv4(csum=46933,dst='192.168.1.2',flags=2,header_length=5,identification=0,offset=0,option=None,proto=1,src='192.168.1.1',tos=0,total_length=84,ttl=64,version=4)", 
                    "icmp(code=1,csum=4650,data=dest_unreach(data='\\xd3]\\xb7\\xe3\\x9e\\xbb\\xf3\\xd6\\x9bq\\xd7\\x9f\\x82\\x18\\xa3\\x92Y\\xa7\\xa2\\x9a\\xab\\xb2\\xdb\\xaf\\xc3\\x1c\\xb3\\x00\\x10\\x83\\x10Q\\x87 \\x92\\x8b',data_len=1,mtu=1),type_=3)"
                ]
            }
        ]
    }
]